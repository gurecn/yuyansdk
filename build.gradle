plugins {
    id 'com.android.library'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-android'
    id 'com.google.devtools.ksp'
    id 'kotlin-parcelize'
    id 'kotlinx-serialization'
}
static def versionNameDate() {
    return new Date().format("yyyyMMdd.HH", TimeZone.getTimeZone("GMT+8"))
}

static def getAppGitHead() {
    return "git rev-parse HEAD".execute().text.trim()
}

static def getAppBuildTime() {
    return "git log -1 --pretty=%ai".execute().text.trim()
}


android {
    compileSdk 35

    defaultConfig {
        minSdk 23
        targetSdk 35
        testInstrumentationRunner 'androidx.test.runner.AndroidJUnitRunner'
        ndk {
            abiFilters 'arm64-v8a', 'armeabi-v7a', "x86", "x86_64"
        }
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [AROUTER_MODULE_NAME: project.getName()]
            }
        }
        lintOptions {
            abortOnError false
        }

        buildConfigField "String", "versionName", "\"${versionNameDate()}\""
        buildConfigField "String", "AppCommitHead", "\"${getAppGitHead()}\""
        buildConfigField "String", "AppBuildTime", "\"${getAppBuildTime()}\""
    }

    //多渠道打包: app中多渠道配置要一致
    flavorDimensions = ["default"]
    productFlavors {
        online {
            dimension "default"
            buildConfigField "Boolean", "offline", "false"
            resValue("drawable", "app_icon", "@drawable/ic_sdk_launcher")
        }
        offline {
            dimension "default"
            buildConfigField "Boolean", "offline", "true"
            resValue("drawable", "app_icon", "@drawable/ic_sdk_launcher_debug")
        }
    }

    buildFeatures {
        viewBinding = true
        buildConfig = true
    }

    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard.cfg'
            resValue("string", "app_name", "@string/ime_yuyan_name")
        }
        debug {
            resValue("string", "app_name", "@string/ime_yuyan_name_debug")
        }
    }
    sourceSets {
        // offline 离线版本
        offline {
            jniLibs.srcDirs = ['libs', "src/offline/libs"]
            manifest.srcFile('src/offline/AndroidManifest.xml')
        }
        // online 在线版本
        online {
            jniLibs.srcDirs = ['libs', "src/online/libs"]
            manifest.srcFile('src/online/AndroidManifest.xml')
        }
    }

    //第三方库使用java1.8
    compileOptions {
        sourceCompatibility 17
        targetCompatibility 17
    }
    namespace 'com.yuyan.imemodule'
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.aar', '*.jar'], exclude: [])
    implementation 'androidx.appcompat:appcompat:1.7.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.2.0'
    implementation 'com.google.android.material:material:1.12.0'
    implementation 'com.google.android.flexbox:flexbox:3.0.0'
    implementation 'androidx.emoji2:emoji2:1.5.0'
    implementation 'androidx.emoji2:emoji2-views:1.5.0'
    implementation "org.jetbrains.kotlin:kotlin-stdlib:2.0.0"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:1.9.0"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:1.9.0"
    implementation 'org.jetbrains.kotlinx:kotlinx-serialization-json:1.6.2'
    implementation 'androidx.preference:preference-ktx:1.2.1'
    implementation 'androidx.navigation:navigation-fragment-ktx:2.8.5'
    implementation 'androidx.navigation:navigation-ui-ktx:2.8.5'
    implementation 'com.louiscad.splitties:splitties-resources:3.0.0'
    implementation 'com.louiscad.splitties:splitties-views-dsl-recyclerview:3.0.0'
    implementation 'com.louiscad.splitties:splitties-views-dsl-constraintlayout:3.0.0'
    implementation 'com.louiscad.splitties:splitties-views-dsl-appcompat:3.0.0'
    implementation 'androidx.exifinterface:exifinterface:1.3.7'
    implementation "androidx.room:room-runtime:2.6.1"
    ksp "androidx.room:room-compiler:2.6.1"
    implementation "androidx.room:room-ktx:2.6.1"
}

tasks.register('makeaar', Copy) {
    from('build/outputs/aar/')
    into('build/outputs/aar/')
    include('imeModule-dev-debug.aar')
    rename('imeModule-dev-debug.aar', 'imesdk_' + versionNameDate() + '.aar')
}

makeaar.dependsOn(build)
